# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-05 21:44
from __future__ import unicode_literals

import datetime
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('meetings_management', '0003_auto_20170505_2142'),
    ]

    operations = [
        migrations.CreateModel(
            name='MeetingRoomRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, verbose_name='metadata')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date and time of creation')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='date and time of last update')),
                ('message', models.CharField(max_length=128, verbose_name='user message')),
            ],
            options={
                'verbose_name': 'user request',
                'verbose_name_plural': 'user requests',
            },
        ),
        migrations.AlterField(
            model_name='meetingroom',
            name='available_from',
            field=models.DateTimeField(default=datetime.datetime(2017, 5, 5, 6, 0, 0, 544117, tzinfo=utc), verbose_name='available from'),
        ),
        migrations.AlterField(
            model_name='meetingroom',
            name='available_until',
            field=models.DateTimeField(default=datetime.datetime(2017, 5, 5, 21, 0, 0, 544176, tzinfo=utc), verbose_name='available until'),
        ),
        migrations.AddField(
            model_name='meetingroomrequest',
            name='room',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='meetings_management.MeetingRoom'),
        ),
        migrations.AddField(
            model_name='meetingroomrequest',
            name='to_user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='meetings_management.MeetingRoomUser'),
        ),
    ]
